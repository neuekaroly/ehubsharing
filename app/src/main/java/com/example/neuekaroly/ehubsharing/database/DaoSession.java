package com.example.neuekaroly.ehubsharing.database;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.neuekaroly.ehubsharing.database.ChargerPoint;
import com.example.neuekaroly.ehubsharing.database.Customer;
import com.example.neuekaroly.ehubsharing.database.JoinCustomersWithChargerPoints;
import com.example.neuekaroly.ehubsharing.database.Reservation;

import com.example.neuekaroly.ehubsharing.database.ChargerPointDao;
import com.example.neuekaroly.ehubsharing.database.CustomerDao;
import com.example.neuekaroly.ehubsharing.database.JoinCustomersWithChargerPointsDao;
import com.example.neuekaroly.ehubsharing.database.ReservationDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig chargerPointDaoConfig;
    private final DaoConfig customerDaoConfig;
    private final DaoConfig joinCustomersWithChargerPointsDaoConfig;
    private final DaoConfig reservationDaoConfig;

    private final ChargerPointDao chargerPointDao;
    private final CustomerDao customerDao;
    private final JoinCustomersWithChargerPointsDao joinCustomersWithChargerPointsDao;
    private final ReservationDao reservationDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        chargerPointDaoConfig = daoConfigMap.get(ChargerPointDao.class).clone();
        chargerPointDaoConfig.initIdentityScope(type);

        customerDaoConfig = daoConfigMap.get(CustomerDao.class).clone();
        customerDaoConfig.initIdentityScope(type);

        joinCustomersWithChargerPointsDaoConfig = daoConfigMap.get(JoinCustomersWithChargerPointsDao.class).clone();
        joinCustomersWithChargerPointsDaoConfig.initIdentityScope(type);

        reservationDaoConfig = daoConfigMap.get(ReservationDao.class).clone();
        reservationDaoConfig.initIdentityScope(type);

        chargerPointDao = new ChargerPointDao(chargerPointDaoConfig, this);
        customerDao = new CustomerDao(customerDaoConfig, this);
        joinCustomersWithChargerPointsDao = new JoinCustomersWithChargerPointsDao(joinCustomersWithChargerPointsDaoConfig, this);
        reservationDao = new ReservationDao(reservationDaoConfig, this);

        registerDao(ChargerPoint.class, chargerPointDao);
        registerDao(Customer.class, customerDao);
        registerDao(JoinCustomersWithChargerPoints.class, joinCustomersWithChargerPointsDao);
        registerDao(Reservation.class, reservationDao);
    }
    
    public void clear() {
        chargerPointDaoConfig.clearIdentityScope();
        customerDaoConfig.clearIdentityScope();
        joinCustomersWithChargerPointsDaoConfig.clearIdentityScope();
        reservationDaoConfig.clearIdentityScope();
    }

    public ChargerPointDao getChargerPointDao() {
        return chargerPointDao;
    }

    public CustomerDao getCustomerDao() {
        return customerDao;
    }

    public JoinCustomersWithChargerPointsDao getJoinCustomersWithChargerPointsDao() {
        return joinCustomersWithChargerPointsDao;
    }

    public ReservationDao getReservationDao() {
        return reservationDao;
    }

}
